{"ast":null,"code":"var _jsxFileName = \"/Users/vaibhav/PycharmProjects/llm-visplain/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [graphUrl, setGraphUrl] = useState(null);\n\n  // Handle form submission\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch(\"http://127.0.0.1:5000/generate_graph\");\n      if (response.ok) {\n        const imageBlob = await response.blob();\n        const imageObjectURL = URL.createObjectURL(imageBlob);\n        setGraphUrl(imageObjectURL);\n      } else {\n        alert(\"Error generating graph\");\n      }\n    } catch (error) {\n      console.error(\"Error:\", error);\n      alert(\"Error during submission\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Graph Visualization\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"Generate Graph\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), graphUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"graph-container\",\n      style: {\n        marginTop: \"30px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Generated Graph\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: graphUrl,\n        alt: \"Generated Graph\",\n        className: \"graph-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setGraphUrl(null),\n        id: \"close-button\",\n        className: \"close-button\",\n        children: \"\\u2716 Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ZUwOU+jvCJdLqn5s6KjZL3oBIOk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","graphUrl","setGraphUrl","handleSubmit","e","preventDefault","response","fetch","ok","imageBlob","blob","imageObjectURL","URL","createObjectURL","alert","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","id","style","marginTop","src","alt","_c","$RefreshReg$"],"sources":["/Users/vaibhav/PycharmProjects/llm-visplain/frontend/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nfunction App() {\n  const [graphUrl, setGraphUrl] = useState(null);\n\n  // Handle form submission\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    try {\n      const response = await fetch(\"http://127.0.0.1:5000/generate_graph\");\n\n      if (response.ok) {\n        const imageBlob = await response.blob();\n        const imageObjectURL = URL.createObjectURL(imageBlob);\n        setGraphUrl(imageObjectURL);\n      } else {\n        alert(\"Error generating graph\");\n      }\n    } catch (error) {\n      console.error(\"Error:\", error);\n      alert(\"Error during submission\");\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Graph Visualization</h1>\n      <button onClick={handleSubmit}>Generate Graph</button>\n\n      {/* Display Graph Image after generation */}\n      {graphUrl && (\n        <div id=\"graph-container\" style={{ marginTop: \"30px\" }}>\n          <h2>Generated Graph</h2>\n          <img src={graphUrl} alt=\"Generated Graph\" className=\"graph-image\" />\n          <button\n            onClick={() => setGraphUrl(null)}\n            id=\"close-button\"\n            className=\"close-button\"\n          >\n            âœ– Close\n          </button>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;;EAE9C;EACA,MAAMO,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,sCAAsC,CAAC;MAEpE,IAAID,QAAQ,CAACE,EAAE,EAAE;QACf,MAAMC,SAAS,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;QACvC,MAAMC,cAAc,GAAGC,GAAG,CAACC,eAAe,CAACJ,SAAS,CAAC;QACrDP,WAAW,CAACS,cAAc,CAAC;MAC7B,CAAC,MAAM;QACLG,KAAK,CAAC,wBAAwB,CAAC;MACjC;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAC9BD,KAAK,CAAC,yBAAyB,CAAC;IAClC;EACF,CAAC;EAED,oBACEhB,OAAA;IAAKmB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBpB,OAAA;MAAAoB,QAAA,EAAI;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5BxB,OAAA;MAAQyB,OAAO,EAAEpB,YAAa;MAAAe,QAAA,EAAC;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAGrDrB,QAAQ,iBACPH,OAAA;MAAK0B,EAAE,EAAC,iBAAiB;MAACC,KAAK,EAAE;QAAEC,SAAS,EAAE;MAAO,CAAE;MAAAR,QAAA,gBACrDpB,OAAA;QAAAoB,QAAA,EAAI;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxBxB,OAAA;QAAK6B,GAAG,EAAE1B,QAAS;QAAC2B,GAAG,EAAC,iBAAiB;QAACX,SAAS,EAAC;MAAa;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACpExB,OAAA;QACEyB,OAAO,EAAEA,CAAA,KAAMrB,WAAW,CAAC,IAAI,CAAE;QACjCsB,EAAE,EAAC,cAAc;QACjBP,SAAS,EAAC,cAAc;QAAAC,QAAA,EACzB;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACtB,EAAA,CA5CQD,GAAG;AAAA8B,EAAA,GAAH9B,GAAG;AA8CZ,eAAeA,GAAG;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}